{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid-19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","JSON","stringify","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifieddata","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.07380d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  console.log(\"Data in Card 1: \" + JSON.stringify(Cards));\r\n  if (!confirmed) {\r\n    return \"Loading confirmed...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                seperator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of confimed cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                seperator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovered cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                seperator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.log(\"Error caught in fetchData : \" + error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifieddata = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifieddata;\r\n  } catch (error) {\r\n    console.log(\"Error caught in fetchDailyData : \" + error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    //\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    console.log(dailyData);\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  console.log(confirmed, recovered, deaths);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"./../../api/index\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          handleCountryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">All</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/index\";\r\nimport coronaImage from \"./images/covid-19.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    console.log(\"Fetched data in componentDidMount : \" + fetchedData);\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    console.log(\"In render : \" + data);\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"Covid-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.d7265326.png\";"],"sourceRoot":""}